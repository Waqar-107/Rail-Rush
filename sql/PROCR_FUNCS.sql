/*------------------------------------------------------------------------------*/
/*PROCEDURE TO ADD A RETURN TRIP*/
CREATE OR REPLACE 
PROCEDURE "ADD_RETURN_TRIP" (TID  NUMBER)
AS
	TRAIN_NO NUMBER;
	TRP_DATE DATE;
	TRP_TIME VARCHAR2(20);
	ARRIVAL VARCHAR2(30);
	DEPARTURE VARCHAR2(30);
	CID INTEGER;
BEGIN
	SELECT TRAIN_ID,TRIP_DATE,TRIP_TIME,STARTING,DESTINATION 
	INTO TRAIN_NO,TRP_DATE,TRP_TIME,ARRIVAL,DEPARTURE
	FROM TRIP 
	WHERE TRIP_ID=TID;

	SELECT MAX(CALC_ID) INTO CID FROM TRIP;
	INSERT INTO TRIP VALUES(CID+1,TID+1,TRAIN_NO,TRP_DATE+2,TRP_TIME,DEPARTURE,ARRIVAL);
END;

/*------------------------------------------------------------------------------*/


/*------------------------------------------------------------------------------*/
/*AFTER GIVING A COMPANY TENDER, DELETE THEM FROM OFFER AND STORE IN HISTORY*/
CREATE OR REPLACE 
PROCEDURE "DEAL_WITH_TENDER" (TID  INTEGER, COM  VARCHAR2)
AS
	DES VARCHAR2(250);
	TDATE DATE;
	MAIL VARCHAR2(50);
	MCOSTING INTEGER;
BEGIN
	SELECT T2.EMAIL1,T1.EXP_TIME,T2.COSTING,T1.DESCRIPTION 
	INTO MAIL,TDATE,MCOSTING,DES
	FROM TENDER_DES T1 
	JOIN TENDER_OFFER T2 ON T1.TENDER_ID=T2.TENDER_ID
	WHERE T2.COMPANY=COM AND T2.TENDER_ID=TID;

	INSERT INTO TENDER_HISTORY VALUES(TID,COM,MAIL,TDATE,MCOSTING,DES);
	DELETE FROM TENDER_DES WHERE TENDER_ID=TID;
END;

/*------------------------------------------------------------------------------*/


/*------------------------------------------------------------------------------*/
/*CHECKS IF THE TENDER HAS EXPIRED OR NOT*/
CREATE OR REPLACE 
FUNCTION "VALID_TENDER" (TID  INTEGER)
RETURN INTEGER
AS
	ANS INTEGER;
	FDATE DATE;
BEGIN
	SELECT EXP_TIME INTO FDATE 
	FROM TENDER_DES
	WHERE TENDER_ID=TID;

	IF FDATE<SYSDATE THEN
		ANS:=0;
	ELSE
		ANS:=1;
	END IF;
	RETURN ANS;
END;


/*------------------------------------------------------------------------------*/


/*------------------------------------------------------------------------------*/
/*SEE IF TRIP DATE IS VALID*/
CREATE OR REPLACE 
FUNCTION "VALID_TRIP" (TDATE  VARCHAR2, TR_ID  INTEGER)
RETURN INTEGER
AS
	TR_DATE DATE;
	XDATE DATE;
BEGIN
	TR_DATE:=TO_DATE(TDATE,'YYYY-MM-DD');
	XDATE:=SYSDATE;

	FOR VAR IN (SELECT TRIP_DATE FROM TRIP WHERE  TRAIN_ID=TR_ID ) 
	LOOP 
		IF VAR .TRIP_DATE>XDATE  THEN
			XDATE:=VAR.TRIP_DATE;
		ELSIF XDATE IS NULL THEN
			XDATE:=VAR.TRIP_DATE;
		END IF;
	END LOOP;

	IF XDATE IS NULL THEN
		RETURN 1;
	ELSIF TR_DATE>XDATE+1 THEN
		RETURN 1;
	ELSE
		RETURN 0;
	END IF;
END;

/*------------------------------------------------------------------------------*/


/*------------------------------------------------------------------------------*/
/*DELETE THE RETURN TRIP IF NECESSARY*/
CREATE OR REPLACE 
PROCEDURE "DELETE_RETURN_TRIP" (TID  INTEGER,TR_ID INTEGER)
AS
BEGIN
		
	/*IF TRIP_ID IS  ODD, DELETE ITS RETURN TRIP TOO WHICH IS EVEN*/
	/*ELSE THE RETURN TRIP IS CANCELED, SO DELETE AL OF THEM FROM ONWARDS*/
	IF MOD(TID,2)=1 THEN
		DELETE FROM TRIP WHERE TRIP_ID=TID+1;
	ELSE
		FOR VAR IN (SELECT TRIP_ID FROM TRIP WHERE TRAIN_ID=TR_ID AND TRIP_ID>TID)
		LOOP
			DELETE FROM TRIP WHERE TRIP_ID=VAR.TRIP_ID;
		END LOOP;
	END IF;

END;

/*------------------------------------------------------------------------------*/
